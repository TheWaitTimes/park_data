name: Run R Script with PostgreSQL

on:
  schedule:
    - cron: '*/5 * * * *'

jobs:
  setup-r-environment:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up R
      uses: r-lib/actions/setup-r@v2
      with:
        extra-packages: remotes

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          r-base \
          libcurl4-openssl-dev \
          libssl-dev \
          libxml2-dev \
          build-essential \
          gcc g++ \
          make \
          libreadline-dev \
          libzmq3-dev \
          postgresql \
          postgresql-contrib

    - name: Start PostgreSQL service
      run: |
        sudo service postgresql start
        sudo -u postgres psql -tc "SELECT 1 FROM pg_database WHERE datname = '${{ secrets.DB_NAME }}'" | grep -q 1 || sudo -u postgres psql -c "CREATE DATABASE ${{ secrets.DB_NAME }};"
        sudo -u postgres psql -c "DO \$\$ BEGIN
        IF NOT EXISTS (SELECT FROM pg_catalog.pg_roles WHERE rolname = '${{ secrets.DB_USER }}') THEN
        CREATE ROLE ${{ secrets.DB_USER }} WITH LOGIN PASSWORD '${{ secrets.DB_PASSWORD }}';
        END IF;
        END \$\$;"
        sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE ${{ secrets.DB_NAME }} TO ${{ secrets.DB_USER }};"
      continue-on-error: true

    
    - name: Cache R packages
      uses: actions/cache@v3
      with:
        path: ${{ env.R_LIBS_USER }}
        key: ${{ runner.os }}-R-${{ hashFiles('**/*.R') }}-${{ hashFiles('**/*.Rmd') }}
        restore-keys: |
          ${{ runner.os }}-R-${{ hashFiles('**/*.R') }}
          ${{ runner.os }}-R-

    - name: Install R packages
      run: |
        Rscript -e 'install.packages(c("DBI", "RPostgres", "dplyr", "jsonlite"))'

    - name: Check PostgreSQL service health
      run: pg_isready -h localhost -p 5432 -U postgres
      continue-on-error: true

    - name: Run R script
      env:
        DB_HOST: localhost
        DB_PORT: ${{ job.services.postgres.ports[5432] }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      run: Rscript R/disneydata.R
      continue-on-error: true
