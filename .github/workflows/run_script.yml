name: Run R Script with PostgreSQL

on:
  schedule:
    - cron: '*/5 3-18 * * *'  # This runs the script every 5 mins

jobs:
  run-r-script:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: ${{ secrets.DB_NAME }}
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
        options: >-
          --health-cmd "pg_isready -U ${{ secrets.DB_USER }}" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up R
      uses: r-lib/actions/setup-r@v2

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libcurl4-openssl-dev libssl-dev libxml2-dev build-essential gcc g++ make libreadline-dev

    - name: Install remotes package
      run: |
        if (!requireNamespace("remotes", quietly = TRUE)) install.packages("remotes")
      shell: Rscript {0}

    - name: Install R packages
      run: |
        install.packages('DBI')
        install.packages('RPostgres')
        install.packages('dplyr')
        saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
        writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
      shell: Rscript {0}

    - name: Cache R packages
      uses: actions/cache@v1
      with:
        path: ${{ env.R_LIBS_USER }}
        key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
        restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

    - name: Install dependencies
      run: |
        remotes::install_deps(dependencies = TRUE)
      shell: Rscript {0}
    
    - name: Run R script
      env:
        DB_HOST: localhost
        DB_PORT: 5432
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_NAME: ${{ secrets.DB_NAME }}
      run: |
        source("R/disneydata.R")
      shell: Rscript {0}
